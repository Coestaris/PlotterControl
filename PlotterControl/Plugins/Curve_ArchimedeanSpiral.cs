/*=================================\
* PlotterControl\Curve_ArchimedeanSpiral.cs
*
* The Coestaris licenses this file to you under the MIT license.
* See the LICENSE file in the project root for more information.
*
* Created: 17.06.2017 21:04
* Last Edited: 18.08.2017 20:26:46
*=================================*/

using CnC_WFA;
using CWA.Vectors;
using System;
using System.Drawing;
using System.Reflection;
using System.Runtime.InteropServices;

    /*ASSEMBLY INFO*/
namespace Plugins
{
    static class CurvePlugin
    {
        static private CurveInfo _info;

        public static void Init()
        {
            _info = new CurveInfo();
            _info.LearnMore = "https://ru.wikipedia.org/wiki/%D0%90%D1%80%D1%85%D0%B8%D0%BC%D0%B5%D0%B4%D0%BE%D0%B2%D0%B0_%D1%81%D0%BF%D0%B8%D1%80%D0%B0%D0%BB%D1%8C";
            _info.Name = "?????????????? ????????????????";
            _info.Discription =
@"   ???????????????????? ?????????????? ??? ??????????????, ?????????????? ????????????, ???????????????????? ?????????? M, ??????????????
???????????????????? ???????????????? ?????????? ???????? OV ???????????????? ?? O, ?? ???? ?????????? ?????? ?????? ??????
OV ???????????????????? ?????????????????? ???????????? O. ?????????????? ??????????????, ???????????????????? ?? = OM
?????????????????????????????? ???????? ???????????????? ?? ???????? OV. ???????????????? ???????? OV ???? ???????? ?? ?????? ????
???????? ?????????????????????????? ???????? ?? ???? ???? ???????????????????? ??.";
            _info.Creator =
@"   ???????????????????? ?????????????? ???????? ?????????????? ??????????????????. ?????? ?????????????????? ?? III ???????? ???? ??.??.,
?????????? ???? ?????????????????????????????????? ?? ????????????????.???? ?????????? ?????????????? ?????????????? ?? ???????????????????? 
??????????????????, ???????????? ?????? ???????????? ???? ?????????????? ??????????????. ???????????????????????? ???????????? ???????? c
??????????????, ?????????????? ???????????????????? ???? ???? ???? ????????????????, ???? ?????????????? ?????????????????????????? ????????????, 
?? ?????????? ?????????????? ?????????????? ?????????????????????? ???????? ?? ???? ???? ????????????????????.";
            _info.Usage =
@"   ?? III ???????? ???? ?????????? ?????? ?????????????? ???? ???????????? ?????????? ?????????????? ?????????????? ????????, ??????????????
?????????????? ?????????????????? ?????? ???????????????? ???????? ?? ???????????????????????? ???????????? ???? ????????????????, 
?????????????????????????? ????????. ?????????? ???? ???????????? ?????????? ???????????????? ?????????????? ???????? (????????????????). ??????
?????????? ?????????????????? ?????????????????????????? ??? ???????????????? ?????????? ?? ??????????????????. ???????? ????????????????????
?? ???????????????????? ?????? ?????????????????????????? ???????????????????? ?????????????????? ????????????????????????. ?? ?????????????? 
?????????? ???????????????????? ?????????????? ?? ???????? ?????????????? ????????????????.???????????????????????????????????? ???????????? 
???????????????? ???? ?????????????? ????????????????. ???????????????? ?????????????? ???? CD ?? DVD ???????????? ?????????? ?????????? 
?????????? ?????????????? ????????????????. ?????????????? ???????????????? ?????????? ???????????????????????? ???????????????????? ?? ????????????????????,
??????????????, ??????????????????????, ????????????????????????????.";
            _info.MathematicalBasis = "p = k * phi";
        }

        public static CurveExample Exmpl1()
        {
            return new CurveExample() { Discr = "?????????????? ???????????????? ?????? k = 1", image = PreviewImage(new Size(300, 300), 1, null,  25) };
        }

        public static CurveExample Exmpl2()
        {
            return new CurveExample() { Discr = "?????????????? ???????????????? ?????? k = 3,\n???????? phi > 0 ?? k = -4, ???????? phi < 0", image = PreviewImage_(new Size(300, 300), 3, -4, true, null,  7) };
        }

        public static Image PreviewImage(Size size, double k, object ob, double CountOfCls)
        {
            var a = new Bitmap(size.Height, size.Width);
            using (Graphics gr = Graphics.FromImage(a))
            {
                DrawCurve(gr, size, k, k, false, ob, CountOfCls);
            }
            return a;
        }

        public static Image PreviewImage_(Size size, double k1, double k2, bool useneg, object ob, double CountOfCls)
        {
            var a = new Bitmap(size.Height, size.Width);
            using (Graphics gr = Graphics.FromImage(a))
            {
                DrawCurve(gr, size, k1, k2, useneg, ob, CountOfCls);
            }
            return a;
        }

        public static GifImage PreviewImageGif()
        {
            return null;
        }

        public static Vector GetVector(ToVectorParams param)
        {
            return null;
        }

        public static CurveInfo GetInfo()
        {
            return _info;
        }

        private static void DrawCurve(Graphics graphics, Size size, double kpositive, double knegative, bool usenegative,  object ob, double CountOfCls)
        {
            double TwoPi = 2 * Math.PI;
            double Step = TwoPi / 360;
            int Scale = 10;
            var pen = new Pen(Color.Black);
            int centerX = size.Width / 2, centerY = size.Height / 2;
            graphics.Clear(Color.White);
            graphics.DrawLine(pen, 0, centerY, centerX * 2, centerY);
            graphics.DrawLine(pen, centerX, 0, centerX, centerY * 2);
            pen = new Pen(Color.Green);
            int oldX = centerX, oldY = centerY;
            for (double i = usenegative ? -(CountOfCls * TwoPi) : 0; i < CountOfCls * TwoPi; i += Step)
            {
                double p = 0;
                double alpha = Scale * i / TwoPi;

                if (i < 0) p = knegative * alpha;
                else p = kpositive * alpha;

                var x = (int)(p * Math.Cos(i)) + centerX;
                var y = (int)(p * Math.Sin(i)) + centerY;
                graphics.DrawLine(pen, oldX, oldY, x, y);
                oldX = x;
                oldY = y;
            }
        }
    }
}
